(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7250],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(r),f=a,g=d["".concat(l,".").concat(f)]||d[f]||p[f]||o;return r?n.createElement(g,i(i({ref:t},u),{},{components:r})):n.createElement(g,i({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7760:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return s},metadata:function(){return l},toc:function(){return c},default:function(){return p}});var n=r(2122),a=r(9756),o=(r(7294),r(3905)),i=["components"],s={id:"configuration-adapter",title:"Configuration"},l={unversionedId:"contracts/adapters/configuration/configuration-adapter",id:"contracts/adapters/configuration/configuration-adapter",isDocsHomePage:!1,title:"Configuration",description:"The Configuration adapter manages storing and retrieving per-DAO settings required by shared adapters.",source:"@site/docs/contracts/adapters/configuration/Configuration.md",sourceDirName:"contracts/adapters/configuration",slug:"/contracts/adapters/configuration/configuration-adapter",permalink:"/tribute-contracts/docs/contracts/adapters/configuration/configuration-adapter",editUrl:"https://github.com/openlawteam/tribute-contracts/edit/docs/website/docs/contracts/adapters/configuration/Configuration.md",version:"current",frontMatter:{id:"configuration-adapter",title:"Configuration"},sidebar:"docs",previous:{title:"Executor",permalink:"/tribute-contracts/docs/contracts/extensions/executor-extension"},next:{title:"Managing",permalink:"/tribute-contracts/docs/contracts/adapters/configuration/managing-adapter"}},c=[{value:"Workflow",id:"workflow",children:[]},{value:"Access Flags",id:"access-flags",children:[{value:"DAO Registry",id:"dao-registry",children:[]}]},{value:"Dependencies",id:"dependencies",children:[{value:"DaoRegistry",id:"daoregistry",children:[]},{value:"Voting",id:"voting",children:[]}]},{value:"Structs",id:"structs",children:[{value:"Configuration",id:"configuration",children:[]}]},{value:"Storage",id:"storage",children:[]},{value:"Functions",id:"functions",children:[{value:"submitProposal",id:"submitproposal",children:[]},{value:"processProposal",id:"processproposal",children:[]}]},{value:"Events",id:"events",children:[]}],u={toc:c};function p(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The Configuration adapter manages storing and retrieving per-DAO settings required by shared adapters."),(0,o.kt)("p",null,"Some adapters have configurable settings which must be stored for each DAO instance that uses the shared adapter."),(0,o.kt)("h2",{id:"workflow"},"Workflow"),(0,o.kt)("p",null,"Submit proposal"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"check that caller is valid member"),(0,o.kt)("li",{parentName:"ul"},"check that keys/values are same length"),(0,o.kt)("li",{parentName:"ul"},"check that proposalId is unique"),(0,o.kt)("li",{parentName:"ul"},"submit proposal to DAO"),(0,o.kt)("li",{parentName:"ul"},"create and store configuration structure")),(0,o.kt)("p",null,"Sponsor module change request"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"check that caller is valid member"),(0,o.kt)("li",{parentName:"ul"},"initiate vote")),(0,o.kt)("p",null,"Process proposal"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"check that caller is valid member"),(0,o.kt)("li",{parentName:"ul"},"check that proposalId exists"),(0,o.kt)("li",{parentName:"ul"},"check that proposal passed"),(0,o.kt)("li",{parentName:"ul"},"for each key and value, set it in the configuration for this DAO"),(0,o.kt)("li",{parentName:"ul"},"process proposal")),(0,o.kt)("h2",{id:"access-flags"},"Access Flags"),(0,o.kt)("h3",{id:"dao-registry"},"DAO Registry"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"SUBMIT_PROPOSAL"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"SET_CONFIGURATION"),".")),(0,o.kt)("h2",{id:"dependencies"},"Dependencies"),(0,o.kt)("h3",{id:"daoregistry"},"DaoRegistry"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Submits/sponsors/processes a proposal."),(0,o.kt)("li",{parentName:"ul"},"Checks if applicant and/or adapter address are not reserved."),(0,o.kt)("li",{parentName:"ul"},"Executes the setConfiguration call to update the registry.")),(0,o.kt)("h3",{id:"voting"},"Voting"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Gets the address that sent the sponsorProposal transaction."),(0,o.kt)("li",{parentName:"ul"},"Starts a new voting for the configuration proposal."),(0,o.kt)("li",{parentName:"ul"},"Checks the voting results.")),(0,o.kt)("h2",{id:"structs"},"Structs"),(0,o.kt)("h3",{id:"configuration"},"Configuration"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"keys"),": the name of the configurations."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"values"),": the value of the configurations.")),(0,o.kt)("h2",{id:"storage"},"Storage"),(0,o.kt)("h4",{id:"keys"},"keys"),(0,o.kt)("p",null,"The array of keys to set in the configuration."),(0,o.kt)("h4",{id:"values"},"values"),(0,o.kt)("p",null,"The array of values to set in the configuration."),(0,o.kt)("h2",{id:"functions"},"Functions"),(0,o.kt)("h3",{id:"submitproposal"},"submitProposal"),(0,o.kt)("p",null,"Creates and sponsors a new configuration proposal on behalf of the member calling the function."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"  /**\n    * @notice Creates and sponsors a configuration proposal.\n    * @param dao The DAO Address.\n    * @param proposalId The proposal id.\n    * @param keys The applicant address.\n    * @param values The token to receive the funds.\n    * @param data Additional details about the financing proposal.\n    */\n    function submitProposal(\n        DaoRegistry dao,\n        bytes32 proposalId,\n        bytes32[] calldata keys,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external override onlyMember(dao) reentrancyGuard(dao)\n")),(0,o.kt)("h3",{id:"processproposal"},"processProposal"),(0,o.kt)("p",null,"Processes a previously created configuration proposal by applying the configuration to the DAO."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"  /**\n    * @notice Processing a configuration proposal to update the DAO state.\n    * @param dao The DAO Address.\n    * @param proposalId The proposal id.\n    */\n    function processProposal(DaoRegistry dao, bytes32 proposalId)\n        external\n        override\n        reentrancyGuard(dao)\n")),(0,o.kt)("h2",{id:"events"},"Events"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"No events are emitted.")))}p.isMDXComponent=!0}}]);